name: Fullstack CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # -----------------------------
  # 🛠️ BUILD PIPELINE
  # -----------------------------
  build-frontend:
    name: 🔧 Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🟦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Install frontend deps
        working-directory: ./frontend
        run: npm install

      - name: ⚙️ Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: 🗃️ Upload frontend build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

  build-backend:
    name: 🐳 Build Backend Docker Image
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🐳 Build backend image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend

      - name: 📤 Push to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  # -----------------------------
  # 🚀 DEPLOY PIPELINE
  # -----------------------------
  deploy-frontend:
    name: 🚀 Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🟦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🚀 Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --cwd frontend

  deploy-backend:
    name: 🚀 Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: 🔁 Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
